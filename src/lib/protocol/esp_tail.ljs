module(..., package.seeall);
var ffi = require("ffi");
var header = require("lib.protocol.header");

var esp_tail = subClass(header);

// Class variables
esp_tail._name = "esp_tail";
esp_tail->init(
   {
      [1] = ffi.typeof([=[
            struct {
               uint8_t pad_length;
               uint8_t next_header;
            } __attribute__((packed))
      ]=])
   });

// Class methods

function esp_tail::new (config) {
   var o = esp_tail->superClass().new(this);
   o->pad_length(config.pad_length);
   o->next_header(config.next_header);
   return o;
}

// Instance methods

function esp_tail::pad_length (length) {
   var h = this->header();
   if( length != null ) {
      h.pad_length = length;
   } else {
      return h.pad_length;
   }
}

function esp_tail::next_header (next_header) {
   var h = this->header();
   if( next_header != null ) {
      h.next_header = next_header;
   } else {
      return h.next_header;
   }
}

return esp_tail;
