// Linux cgroup API
// this is all file system operations packaged up to be easier to use

var require, error, assert, tonumber, tostring,
setmetatable, pairs, ipairs, unpack, rawget, rawset,
pcall, type, table, string = 
require, error, assert, tonumber, tostring,
setmetatable, pairs, ipairs, unpack, rawget, rawset,
pcall, type, table, string;

var function init(S) {

var h = require ("syscall.helpers");
var split = h.split;

var abi, types, c = S.abi, S.types, S.c;
var t, pt, s = types.t, types.pt, types.s;

var util = S.util;

var cgroup = {};

var function mkgroup(name) {
  // append default location, should be tmpfs mount
  if( name->sub(1, 1) != "/" ) { return "/sys/fs/cgroup" .. name; } else { return name; }
}

function cgroup.mount(tab) {
  tab.source = tab.source || "cgroup";
  tab.type = "cgroup";
  tab.target = mkgroup(tab.target);
  return S.mount(tab);
}

function cgroup.cgroups(ps) {
  ps = tostring(ps || "self");
  var cgf = util.readfile("/proc/" .. ps .. "/cgroup");
  var lines = split("\n", cgf);
  var cgroups = {};
  for( i = 1, #lines - 1 ) {
    var parts = split( ":", lines[i]);
    cgroups[parts[1]] = {name = parts[2], path = parts[3]};
  }
  return cgroups;
}

return cgroup;

}

return {init = init};



