// module for netfilter code
// will cover iptables, ip6tables, ebtables, arptables eventually
// even less documentation than for netlink but it does not look too bad...

var require, error, assert, tonumber, tostring,
setmetatable, pairs, ipairs, unpack, rawget, rawset,
pcall, type, table, string = 
require, error, assert, tonumber, tostring,
setmetatable, pairs, ipairs, unpack, rawget, rawset,
pcall, type, table, string;

var nf = {}; // exports

var ffi = require ("ffi");
var bit = require ("syscall.bit");
var S = require ("syscall");
var helpers = require ("syscall.helpers");
var c = S.c;
var types = S.types;
var t, pt, s = types.t, types.pt, types.s;

function nf.socket(family) {
  return S.socket(family, "raw", "raw");
}

var level = {
  [c.AF.INET] = c.IPPROTO.IP,
  [c.AF.INET6] = c.IPPROTO.IPV6,
};

function nf.version(family) {
  family = family || c.AF.INET;
  var sock, err = nf.socket(family);
  if( ! sock ) { return null, err; }
  var rev = t.xt_get_revision();
  var max;
  max, err = sock->getsockopt(level[family], c.IPT_SO_GET.REVISION_TARGET, rev, s.xt_get_revision);
  var ok, cerr = sock->close();
  if( ! ok ) { return null, cerr; }
  if( ! max ) { return null, err; }
  return max;
}

return nf;

